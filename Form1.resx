<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgICAgICAgICAgIDAwMDAwMDAwMD/9sAQwEBAQEBAQECAQEC
        AgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgA
        0wE8AwERAAIRAQMRAf/EAB8AAQABBAMAAwAAAAAAAAAAAAAJAQMICgIFBwQGC//EADIQAAEDBAIBAwMD
        AgcBAQAAAAABAgQDBQYHEQgJITESURMKcSIUQWGBkcEyQiMVFjP/xAAdAQEAAgMAAwEAAAAAAAAAAAAA
        AQcFBggCAwQJ/8QANREBAAEDAgUCBQQABAcAAAAAAAERAgMEBSExEgYHQVFhcSITCIGxMhTwkaFi4fEz
        Q1MVFv/aAAwDAQACEQMRAD8A3+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOLnNanLl4T6+v8AoExEzNI5qK9ieqrwnvyqKnoi8Kvq
        ieiKRMxEVngieE09VEqsVeEX1/R31VPXlPT2/wASY4xWKU+ZMTDmioqcp7DmOC1aaccuT1449155XhPb
        6qRN0W29c1i35SiZpNJ5qrVptRVVyIic88+nHCfJef6oqN9R1Rw+KeMqte13KNXnjjn0X/knKevHHseV
        JHIgAAAAAAAAAAAAAAAAAAAAAAAAABRV4RV4VeEVeE91/QC26q1vui+/Ht6/TlE9+PkqJz7JzzyBT76I
        1z3MqNaiIvKt455RvHovsvLv0Tj1VALiO5RFRFVFRFRU4VF59uFRV5T+/sBXn05RFX05ROOFX+3C8cKB
        bSqiu+PDuefp/dU59OfRFT1X29QOfK8J+1fX3TlPT/RQLdSqlPjlj1V3yROG/t5anPDnezEcnsq+noBc
        RyORHN/c1URUVFaqKipyiovPCoqAUV6o1XIxzuPZOOHO/wAF4VP8QOuu12ttltlxvF4nQ7VabRClXO6X
        O5SaMKBbbbAjPmT58+XIcyjFhw4lJ9SrVe5GU2MVVXhFJtxZM99uHDZ1577otstpMzN0zS2IiOMzMz6H
        VFkTfdMRbETMz8mjj5G/yvsmtWdZHq3x3YjhtfErDOmWSr2M2jaJF+flsuHIdQk3HWGCPk223R8cY+nx
        FuF3SWs1ipU/iU2/FX95eMfxB0eo0WLePJ2bVWam+227+pp56JtiYmZtzXXY7pmZibZicV1sRWYrdMVi
        vN071mzJOHarZumJmJumkxNOVKV+POKowtZflJ+VjBcpj3rOs707uvHW16dWZhWYajw/FINeGi8Vo8K9
        a0hYjf7c+s137K9StNaxycrTcn7S1d1/EvxFummyY9u0ut0Os6aY8uLNkzTEx63WZ754+/THT7RzYnB3
        pveO7r1E2TZXl00n9m7l4o/Ltobylauut2wiFI13uzX0a3t21pG+XKPcLtjv85yx4mUYvdqdOKzLcCuk
        ti06M5tGjWjV/wDolUqNRWfc4R8t+Ht/8Rbpbpdfdfq9mzXUw6nomzqn1syWz/HLZHG6ImYm36rZmG/b
        Lvun3vTzmxx057f5Wz7/AA+HtVBh5Rfyk2af2Jleh/H/AIhh2w7rhs+441l3YXO6My8YO3IbdIqRLlbd
        W4jb7hbWZhStcig6k68S5KW6rWa77FCRSaj3X34g/FGO4dHg7g8i35sVmWOq3Q45vtvmI9Mt1KxF0f8A
        j+qPnwjX957wjT5L9Ptk23TbbMzdPGP8f6/pMVhIwn8oLy1Y5lFK+5DtHT+zbRRkfyauFZPpLA7bYZdJ
        shWVYrbhgcDE8toU2MRWNelxc9rlRXOcnPN86z8T/DWt0d1ml0es019Ji3NGpzXzbdEc7ceT6Zn4Tw92
        AjvLfLMsRdfimyba/wAeFPblzblfiC83OlvKFYrxhs+wJpztBhVnZesy1DLu7Lrab9j9OokSvmes75Wo
        xJN7sVCa9rJ0ORSZcLW+qxKqPpubWXiLzJ4L3zxLqsWusyX67tXVUnHqumYmzq6pjHmt4223RSlbZpPw
        b1se/wCl3m2lv054iKxPKflxr6ceCcZjke1HJ7L/AHRfb0X2+ilGWzN1sTMUn2bBPCaOR5AAAAAAAAAA
        AAAAAAAAAAAAAAAQJ/kwZ/nusfDx2TzLWmb5frvL7ZedRtt2V4Lk18xHJbfTl7RxaNLpwr7jtwtl0jMl
        xqrqVVravxqU3K1yKi8AavOh/wAoCP1i8RWhetulpWxd8+SaU3MMNvWZ7gp37I8b17OyXO8gmWLMbhlG
        X3GVM2Tfadqv0WPabcyq6HSr01WY9tCk2hICfXwheJHtxpaRF7l+TTtHv/cfZ7Oa8zMMd0TeN8Z/kOqt
        NV8nbLkybjmViiZO7C802RJpXOqjYtKhVsFiSorIrK1dlORRDXb1vD8gHnv8xHeTr7N8he7ur+qev173
        LcrFjeu8izWnilmwTWe4IGo8WxjH8DxXM8Gste8zat1ozJl0mvkSH/Gr8nOVWI0MkvIj4DO4vQnp5vLu
        JrXzG9tM1vGhMUjZzLxK45HtDEJF8tkW72uBc2W7KrPuObWtc6HQnukUFdGqte6l9pVRV+aB8HefkD7V
        72/E2wfsPle7NjQewWN9m8d0/d9xYrll8w7PsmsuJbKv0O0SL3kmMTrXcps6vi0uJEm1VqJ/OqRvu1kd
        Vc5yh4R0m8amY9qeqGjuxOdfkjZvoHLttYf/APT3vUWV74vNS+4NLW83a1us9xfde0eNXKpXdRtzaqLW
        hRn/ABqovw445D0fwt7g7ddevyBL10Ds3fvZHf8A60UcazmFmueytiZdsDWN4ssHTEPZFnzWy26+5jsC
        34pfMRz65RMbmS4M9WVpv3KK1XNfTa0PAqGke4Hkt8/HkG6bYX5EeyHWTGMS2d2AzawTccz/AGhkGO2i
        1YhmFugRsZtGHWjZ+F2212/7d5alP7FZlGiynw1nHCAZad9vBB5H+h/UTeHbvC/Nn2g2PM0Dib9hXPCK
        mSbuwCRerBaZkWnev/NyaNv7Jkh3SBGruk0qdWE+lX+2tJXNVUcPmO6zLyo9kN2fi1WPONm57dMo3fs7
        fN16b55sqQ1IuSZTgFqvc/JblMu82G+G2Rebpr5kOzzq6fB8+g6s6qq1KtR7uiPxd7c0ncHlzDO42W5N
        PoMOTUY4njH3LOiLJuieExE3T+/NrfdWpyafZsk4p6Zuui2Z+ExM0/WjM/wv9TdUO8N1s7CdbemfWHuR
        3ayXLMsZe7X2EpYZIpOvlp2DWsdbGJWVZbAutPDI+OYR8JMeJTWA6e5W1Kjl+41xYnnTvLfJ885Nm7o3
        rddq7Lx4rItv0c5Ym2ybeqlv25jrpdwrdF90VpERSa4vt/R6X/0NufRYcebW/wC6nGa+tZ9uMRXn6sr9
        W4J36uGVVYnZ/wDHy8fl01NXtdypzaGk8k6qSs9bPbQV1rWPE2DkdHH5cF1X5MrIlahIYio+kvy/Yazv
        m5+Psen+92n5F7ht3izLb0zqo1/2+msfymzDExPP1py9H32Yddz1m36a7FMceiLer15cZ+E8GlDvjcOx
        Olvfrt3cOteCZx05S+zNv6pXS2UsotyXXet9pWltvv2FSv4tyusCtTZElpXs06NKrtjJ9itHrKrGOTub
        t3YNs778Z7Hpe6NRi3vFGLHlt1H1zGfPp4rjy3TkiMlZn+XVEXXW/RdHTwV9rNTn27ecv9OJ0+K6+eHr
        SecU5R8nqPhK8d8jyK93cJwO/WqTL0TqT/z9qb+uDaPzoVcRx+4sSwYG+Xx9tbjsPJKVOC2j6u/h0Zld
        vLYqouJ89+SrfG3YuTV6fJEdw63B/X0cRM2X2zktrfmnoututuxWTW2bJil9I48nt7c2uN110RfbFuGL
        om6fePjM8q8v1bcl6sni98vL/JJ44dCaP696m3N1/pxLdqfbeBa61xjF0yi/4zRpUH53it2xKxQbm/E8
        P2xbH4/dabJFVk20yadViI2unw40w6jy34cw9q+Ud+1+4azatxuvvz4s2bLksx23XdVuPJZffNLsunnr
        s4dXVbdxpFG79Gzbvizbbp8eO3NjiembbaV6eHCfWOPHnzq0kemex9t9DfIro/I5MW54Ts3SHY6x682R
        jUla8aSyHIzGjr3Z2IXajSq0P5UOZZZ8mitN3LazUo1U5arTvbvnbdj8ieNNw0+DozbDq9nyanDdwmbL
        oxffw32+kXWTNLo+cc1d7Z9/bN5xWU6boyxFOPGJ/wCVPbjL9g+g5rqTHsX5MqIlVi8Iiq2qn3G8on9e
        Hev9V9z8XYtm2sT7rznmvEoAAAAAAAAAAAAAAAAAAAAAAAACHTz09Tt492/GNvXrn1zxSJmu2s1u2s5O
        O49Nv1oxuhMo4/sLHb5dqi3e+yYdsjui2uDVqIlSqz5/H4ovKoBFBoj8bLS++fDvovqx2/07iuh+62BW
        3PZ9Demu4uL3fP8AFsuuWaZROsT8qyTG6qQtlYrPx6VBpzbVMlVWrSps+xUoSKNOswPsPhv1r54/HhmF
        DqF230/aO1HSyxZCuJa43lj24sGmZ7qbG6Eh8e1XbH4OVXu3ZZl2qKsSnTelin0KV0srH8RXpSpLFAjd
        yfxHecrxr+TLs/3K8W2O6h3RhPYnIdk3SkmW5FhTllYZtDN4Gyrhh2bYlnF7wqXEuuP5ZQprHmWu4q2t
        TjNf82pUfRA7/tbhP5cvfnROddUNvdbOtmudWbbjWyxZ3dMPvup8cuM6wRrrBuda0175X3Bnk2BaZcqD
        TdMWJDSRUotdTY/4vcxwZQ9gPBp2twn8c3APGhp224vuPs7E3Pi23s8o2TJLbjeKOu96z2+5hk8Oz37M
        pFmiz4OIWq4Q7e2u7+O6c6MtVlNPkrALHSf8Rzord+qmlZ/dXX25cf7UysPdV3TaMS3rS/8AnIOWrd7o
        jKVqWyW26WdKC2dIrlSPXrU0erk+Sqigdd4v/DT3c8Yfmh2HkekLHk1s8WeQQ80sDLtk20sGyG8ZHYZ2
        v4l3xZ9+xqLXj5FJuFi2fQSNGk/wKEhI1L5PcrHvV4YiZT42fPT1Y8v/AHR8gHRPrjqDJIe5Nk7kj4Xe
        Nn5vr242S7a72DkUS70Z6YxU2Fi95tdxqpbaL6aV301pqitfTVF9Q9P7WYJ+XL3f0FsTq3tbQfVfDdY7
        dtcfGc7n4RfNaY/fLjjlW4xpU60JeZ20cwqW+BOWMxkp8eI2u6OitY9Pk75Bkhnngu3Jp/8AHNq9LG3C
        zbB7Qarzi6durtbcHSXcbNes4j3ifdcg1tiEiVGiT79Wha5rrApVW0Ka3O6ROKVNiVmNbd/4896aLsfy
        fpddud0Y9t1tl2ky5J/7UZpsiMntSLrbYu9rZmebA9yaO/W7Tkx446rraXU94isT+tJqh+8cXZbw0w+j
        79D9qbr2D6m9qaF8vFPJew2hZ+x7bkOSQ4mUuuOOXOLOxuderHTusa1cWe5wZ9gRyUaLmtfw5FZ2J5M7
        V80ZvIf/ANJ2bj2ndezsmK2cWnzW6aYikdM23X32xlmKxN1s/cmts21pHPTNp12zYdujS6uM2DURM8bJ
        vjn6zS7945cY5yz76wdwfCp043FivYCzeUnyQbuvWEtvD4OtM3l7BvuE5J/61huNmrRMlxeZhdrj5DSj
        0bksujQWbRRkplOq7lWemjd49j+de9diz7Fk7U7Y2/Bkm2ubD9q2+JmfSbb5isUrWtePF9mj1mw7dn/s
        W6zVZrq1pW6Y+Uwiv2TqTZX5CPkv7k7s6q4TdsTwO06zr5naZ2VQ41F8yhrbALXimscTvKRpda22vOt0
        360KyjESRW/gpVdXqq9lKpxa217zt/40eNNm7b7wzW5d0vz22Utu6rY+9lpmutumYrZo7eE+k8KxMzDF
        anT5e5N01Gp0ls/Yss6orwmZp/nWacI9a+lGdfQHyodIvDp44sow3VsKduTyL5vlMG+7n1lleG5rg1nt
        GaJdKOO1sCyXKp1op1Ydg01i1OvQdQoNV8i61KzWJ/3/ADSu/IPiDyB5q8nYtw3mcei8dYcV8afPiy48
        lvRP1TksrMVuzXzwiZmlsRbbSIiH3bVve3bLtvTityTuV/8AK263hE/H2j14TEV+EPO9Qfk8RtZ7HsGW
        2bxgdQdbpIuke3Zfl+q1mY7n7cPvV0hvy2nZ7rExOE6vcJUWmtVlORV+xWkU2fc9P3Jld7/FTLuG05NH
        f3VumtttsrZhy323Y+uy2Yx/TdfdFLeUUiOE0iYTg7u+1mjJ/Ww2RM/VNsREzHrWaz+r0ndupunXmL8z
        vWDbPj/y29ZVasnvWLbO7t2yXrnJsQiYPbtJ3Sw3eNsCXNvdtg26tL2TAiRcerR6bv5L7pQSojnurqtP
        E7Hu3e/hLwfumyeR8VmDUYcd+n2yl8X3amNTF9mXHNK8MPVGW26kTStv8Yo9mTDod833Drdtr01m6/4T
        6evtWae88pfoAUFRaacf7UVUanCJw3/i34oiIiNT0T+yf19z884ibaxdPVdXj/j5UWRNa8ea6SgAAAAA
        AAAAAAAAAAAAAAAAAAAKKiL6KiKn0X1AfFPonr7+ieoBWtVOFRFTlHcKicfJHfJF4+qOTn9QHCfRPX3A
        fFq+6Ivqi+ye6ey/qnADhPfhOfrwA4T6J6rz7f1+v6gERE5VEROV5XhPdfblfqvAFFa1fVWtVeFTlURf
        RU4VP0VAKq1F90RfZfVE/p7f5AWa6KrP2p+5V4RUarlTlFTn9vr6f5fX6kTSkxNeMU4Im2bqUn14/GPZ
        rZ+RP8aXqR3XzvJN0aoye9dUNz5XNr3TLJmH4zByrVubXuW9laVkF/1vXn4+62X6c9F/kS7TcYTa73Oq
        1qFWqquOmfGX5Q97dg6LHse6Y8e7bLj/AOnOS67Hnx8omPuxbd1xNsRbbGSvTFsRbNttYnV9z7W0O4ZJ
        zYL7sGWnGIt+mf0pw/4yjG1f+HTWo5NFrbq7sUpeG0ZSPm2vVWoFt2U3WIjl+ceNkWV5TcrXj76zP9z3
        225tRV9G/JEcWrvf5qYf6WSNk7duybnkikZNRqIvtxz7xii222+LZ4xFa/FidN2NH3K6zP1Wf7fpn5cP
        3bafTfpJ1y6G6it2letOvYmE4jHqpPvU+vUfdctzTIHM+EjJc2ymV8rlkN5rsVyI6oraNBrlZRp0qfDE
        4671787o8g7rO8d0am/UZ5m6MePpm3Fhi6a3Rjx8bccTP8qfynjdN0t00eg0+3Y/taanRT4Vn4zPr8PZ
        Fv5Lvx5+oPkNy65bmtdyvnW/sTemI7INka+skG741ncxlNWUbhsXXsyRa4V6vLWoiVLlCmWy4yETivWq
        pwha/iz8jO8vG+gs2PU47d17bx0+3hz3zZkxUnh9vNbE9PTztieqLfSLeNcRvPbGj3WZy47vtZ5jnHr8
        44V+McYn2QwYZ+HPkLMnoO2L3mttTCqUn5TKeEaUlNyu6Qmv/dRoVcizaRZbHMq0vas6lPp03J/+NTn0
        vPc/zVwX6SLtu7evt3SzjbN+quvx1j1us6KXfCJpX3hruPsOy2+Lsuouut9oin7Nq3oF45erfji1XX1h
        1vweRa6t6qQ5ue7EyiRSvOyNk3iHTq049xy3Iko0Pu0IKVnpDgRaUa3QWVHJQoM+b1dyR395N7t8nbpO
        690Z5updN2PBbE2YcNeH0Y4rbEzERWYmZmnGW6bftWj2zF0aa22Lp4TNIrNPf4cZ/wBWeSIieiIiJ9E9
        DRGQVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAD//2Q==
</value>
  </data>
</root>